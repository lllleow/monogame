name: Build and Release Project

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '8.0'  # Updated to .NET 8.0

      - name: Restore NuGet packages
        run: dotnet restore MonoGame.sln

      - name: Build MonoGame project
        run: dotnet build MonoGame/MonoGame.csproj --configuration Release --no-restore

      - name: Build MonoGame-Server project
        run: dotnet build MonoGame-Server/MonoGame-Server.csproj --configuration Release --no-restore

      - name: Create Artifacts Directory
        run: mkdir artifacts

      - name: Ensure MonoGame Artifacts Directory Exists
        run: |
          $targetDir = "artifacts\MonoGame"
          if (-not (Test-Path $targetDir)) {
              New-Item -ItemType Directory -Path $targetDir
          }

      - name: Ensure MonoGame-Server Artifacts Directory Exists
        run: |
          $targetDir = "artifacts\MonoGame-Server"
          if (-not (Test-Path $targetDir)) {
              New-Item -ItemType Directory -Path $targetDir
          }
          
      - name: Copy MonoGame binaries
        run: |
          Copy-Item "MonoGame/bin/Release/net8.0/*" "artifacts\MonoGame\"  # Ensure path matches target framework and configuration

      - name: Copy MonoGame-Server binaries
        run: |
          Copy-Item "MonoGame-Server/bin/Release/net8.0/*" "artifacts\MonoGame-Server\"  # Ensure path matches target framework and configuration

      - name: Zip MonoGame binaries
        run: Compress-Archive -Path "artifacts\MonoGame\*" -DestinationPath "artifacts\MonoGame.zip" -Force

      - name: Zip MonoGame-Server binaries
        run: Compress-Archive -Path "artifacts\MonoGame-Server\*" -DestinationPath "artifacts\MonoGame-Server.zip" -Force

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: game-build
          path: artifacts/*.zip

  release:
    needs: build
    runs-on: windows-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: game-build
          path: release

      - name: Release Game Build
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: monogame-${{ github.run_number }}
          name: Game Release ${{ github.run_number }}
          body: 'Game Build Release'
          files: |
            release/MonoGame-Server.zip
            release/MonoGame.zip
